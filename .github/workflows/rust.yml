name: Rust

on:
  push:
    branches: [main]
  pull_request:
  release:
    types: [published]

env:
  RUSTFLAGS: -D warnings

jobs:

  complete:
    if: always()
    needs: [fmt, build-and-test]
    runs-on: ubuntu-latest
    steps:
    - if: contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled')
      run: exit 1

  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - run: rustup update stable && rustup default stable
    - run: find . -type f -name '*.rs' -print0 | xargs -I {} -0 rustfmt --check "{}"

  build-and-test:
    strategy:
      matrix:
        include:
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - uses: stellar/actions/rust-cache@main
    - run: rustup update
    - run: cargo build --target ${{ matrix.target }}
    - run: cargo test --target ${{ matrix.target }}
    - if: startsWith(github.head_ref, 'release/')
      uses: stellar/actions/rust-workspace-publish-dry-run@main
      with:
        cargo-package-options: --target ${{ matrix.target }}

  publish:
    if: github.event_name == 'release'
    needs: [complete]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: stellar/actions/rust-cache@main
    - run: rustup update
    - run: cargo install --target-dir ~/.cargo/target --locked --version 0.2.35 cargo-workspaces
    - run: make publish
      env:
        CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
